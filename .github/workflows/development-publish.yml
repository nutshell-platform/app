name: Deploy expo updates ( development )

on:
  # Trigger: on new tag push
  push:
    branches:
      - development
    paths:
      - 'src/**'
      - '*.json'
      - '*.js'
      - '.github/**'
      - 'functions/**'

jobs:
  build:
    name: Publish changes

    runs-on: ubuntu-latest

    steps:
      # Get the repo files from current commit
      - name: Cloning repository
        uses: actions/checkout@v1

      - name: Checkout development
        run: git checkout development


      # Install frontend dependencies based on nvmrc
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvmfunctions
        working-directory: functions

      - name: Set Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvmfunctions.outputs.NVMRC }}"

      - name: Install functions dependencies
        run: npm i
        working-directory: functions

      # Install frontend dependencies based on nvmrc
      - name: Read .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm

      - name: Set Node.js (.nvmrc)
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Install frontend dependencies
        run: npm i

      
      # Run the deployment scripts
      - name: Create environment files
        run: |
          echo -e "${{ secrets.DOTENV_STAGING }}" > .env
          echo -e "${{ secrets.GOOGLE_SERVICES_JSON }}" > google-services.json
          echo -e "${{ secrets.GOOGLE_SERVICES_PLIST }}" > GoogleService-Info.plist

      - name: Automated testing
        run: npm run test:all
        
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 3.x
          expo-username: ${{ secrets.EXPO_USERNAME }}
          expo-password: ${{ secrets.EXPO_PASSWORD }}


      - name: Publish
        run: npm run deploy:development

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --force --project=development
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}