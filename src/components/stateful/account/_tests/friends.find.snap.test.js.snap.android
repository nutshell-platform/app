// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FriendFinder Matches snapshot 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "backgroundColor": "rgb(0,0,0)",
          "flex": 1,
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f6f6f6",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "flex-start",
            "maxWidth": "100%",
            "overflow": "hidden",
          }
        }
      >
        <svg
          data-file-name="SvgUndraw_friends_online_klj6"
          height="101%"
          preserveAspectRatio="xMidYMid slice"
          style={
            Object {
              "bottom": 0,
              "left": 0,
              "minHeight": "100%",
              "minWidth": "100%",
              "opacity": 0.5,
              "position": "absolute",
              "top": 0,
            }
          }
        />
        <View
          style={
            Object {
              "backgroundColor": Object {
                "color": Array [
                  246,
                  246,
                  246,
                ],
                "model": "rgb",
                "valpha": 0.9,
              },
              "bottom": 0,
              "left": 0,
              "maxWidth": "100%",
              "position": "absolute",
              "right": 0,
              "top": 0,
            }
          }
        />
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <View
            style={
              Object {
                "maxWidth": "100%",
              }
            }
          />
          <View
            style={
              Array [
                Object {
                  "backgroundColor": "rgb(0,0,0)",
                  "elevation": 4,
                  "zIndex": 0,
                },
                Object {
                  "shadowColor": "#000000",
                  "shadowOffset": Object {
                    "height": 3,
                    "width": 0,
                  },
                  "shadowOpacity": 0.24,
                  "shadowRadius": 4,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "rgb(0,0,0)",
                  "elevation": 0,
                  "flexDirection": "row",
                  "height": 56,
                  "marginTop": 0,
                  "paddingHorizontal": 4,
                  "paddingLeft": 20,
                  "paddingVertical": 30,
                  "width": "100%",
                }
              }
            >
              <View
                accessible={true}
                focusable={false}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "flex": 1,
                      "paddingHorizontal": 12,
                    },
                    Array [
                      false,
                      false,
                      undefined,
                    ],
                  ]
                }
              >
                <Text
                  accessibilityRole="header"
                  accessibilityTraits="header"
                  accessible={true}
                  numberOfLines={1}
                  style={
                    Array [
                      Object {
                        "color": "#000000",
                        "fontFamily": "Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                        "fontWeight": "400",
                        "textAlign": "left",
                      },
                      Array [
                        Object {
                          "color": "#ffffff",
                          "fontFamily": "Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                          "fontWeight": "500",
                        },
                        Object {
                          "fontSize": 20,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  Friends
                </Text>
              </View>
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": undefined,
                  }
                }
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                nativeID="navigation-home"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "margin": 6,
                        "overflow": "hidden",
                      },
                      Object {
                        "borderRadius": 18,
                        "height": 36,
                        "width": 36,
                      },
                      undefined,
                      undefined,
                    ],
                  ]
                }
              >
                <View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": Array [
                            Object {
                              "rotate": "0deg",
                            },
                          ],
                        }
                      }
                    >
                      <Text />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": undefined,
                  }
                }
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                nativeID="navigation-findfriends"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "margin": 6,
                        "overflow": "hidden",
                      },
                      Object {
                        "borderRadius": 18,
                        "height": 36,
                        "width": 36,
                      },
                      undefined,
                      undefined,
                    ],
                  ]
                }
              >
                <View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": Array [
                            Object {
                              "rotate": "0deg",
                            },
                          ],
                        }
                      }
                    >
                      <Text />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": undefined,
                  }
                }
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                nativeID="navigation-writenutshel"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "margin": 6,
                        "overflow": "hidden",
                      },
                      Object {
                        "borderRadius": 18,
                        "height": 36,
                        "width": 36,
                      },
                      undefined,
                      undefined,
                    ],
                  ]
                }
              >
                <View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": Array [
                            Object {
                              "rotate": "0deg",
                            },
                          ],
                        }
                      }
                    >
                      <Text />
                    </View>
                  </View>
                </View>
              </View>
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "disabled": undefined,
                  }
                }
                accessible={true}
                focusable={true}
                hitSlop={
                  Object {
                    "bottom": 6,
                    "left": 6,
                    "right": 6,
                    "top": 6,
                  }
                }
                nativeID="navigation-toggle"
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Array [
                      Object {
                        "alignItems": "center",
                        "justifyContent": "center",
                        "margin": 6,
                        "overflow": "hidden",
                      },
                      Object {
                        "borderRadius": 18,
                        "height": 36,
                        "width": 36,
                      },
                      undefined,
                      undefined,
                    ],
                  ]
                }
              >
                <View>
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                        },
                        Object {
                          "height": 24,
                          "width": 24,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Object {
                          "bottom": 0,
                          "left": 0,
                          "opacity": 1,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "transform": Array [
                            Object {
                              "rotate": "0deg",
                            },
                          ],
                        }
                      }
                    >
                      <Text />
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
        <RCTScrollView
          contentContainerStyle={
            Object {
              "flexGrow": 1,
              "flexShrink": 0,
              "maxWidth": "100%",
              "paddingHorizontal": 10,
              "paddingVertical": 40,
              "width": 500,
            }
          }
          refreshControl={
            <RefreshControlMock
              onRefresh={[Function]}
              refreshing={false}
            />
          }
          showsHorizontalScrollIndicator={false}
          showsVerticalScrollIndicator={false}
          style={
            Object {
              "maxWidth": "100%",
            }
          }
        >
          <RCTRefreshControl />
          <View>
            <View
              style={
                Object {
                  "maxWidth": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#ffffff",
                    "borderRadius": 0,
                    "elevation": 4,
                    "flexDirection": "row",
                    "shadowColor": "#000000",
                    "shadowOffset": Object {
                      "height": 3,
                      "width": 0,
                    },
                    "shadowOpacity": 0.24,
                    "shadowRadius": 4,
                  }
                }
              >
                <View
                  accessibilityLabel="search"
                  accessibilityRole="button"
                  accessibilityState={
                    Object {
                      "disabled": undefined,
                    }
                  }
                  accessible={true}
                  focusable={false}
                  hitSlop={
                    Object {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "margin": 6,
                          "overflow": "hidden",
                        },
                        Object {
                          "borderRadius": 18,
                          "height": 36,
                          "width": 36,
                        },
                        undefined,
                        undefined,
                      ],
                    ]
                  }
                >
                  <View>
                    <Text />
                  </View>
                </View>
                <TextInput
                  accessibilityRole="search"
                  accessibilityTraits="search"
                  allowFontScaling={true}
                  keyboardAppearance="light"
                  onChangeText={[Function]}
                  placeholder="Search by handle or email"
                  placeholderTextColor="rgba(0, 0, 0, 0.54)"
                  rejectResponderTermination={true}
                  returnKeyType="search"
                  selectionColor="rgb(0,0,0)"
                  style={
                    Array [
                      Object {
                        "alignSelf": "stretch",
                        "flex": 1,
                        "fontSize": 18,
                        "minWidth": 0,
                        "paddingLeft": 8,
                        "textAlign": "left",
                      },
                      Object {
                        "color": "#000000",
                        "fontFamily": "Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                        "fontWeight": "400",
                      },
                      undefined,
                    ]
                  }
                  underlineColorAndroid="transparent"
                  value=""
                />
                <View
                  accessibilityLabel="clear"
                  accessibilityRole="button"
                  accessibilityState={
                    Object {
                      "disabled": true,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 6,
                      "left": 6,
                      "right": 6,
                      "top": 6,
                    }
                  }
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "overflow": "hidden",
                      },
                      Array [
                        Object {
                          "alignItems": "center",
                          "justifyContent": "center",
                          "margin": 6,
                          "overflow": "hidden",
                        },
                        Object {
                          "borderRadius": 18,
                          "height": 36,
                          "width": 36,
                        },
                        Object {
                          "opacity": 0.32,
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View>
                    <Text />
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "maxWidth": "100%",
                  "paddingTop": 20,
                  "width": "100%",
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "flexDirection": "row",
                    "justifyContent": "flex-start",
                    "marginTop": 20,
                    "maxWidth": "100%",
                    "position": "relative",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "alignItems": "stretch",
                      "backgroundColor": "rgb(0,0,0)",
                      "borderColor": "transparent",
                      "borderRadius": 0,
                      "borderStyle": "solid",
                      "borderWidth": 0,
                      "elevation": 2,
                      "flexDirection": "column",
                      "flexGrow": 1,
                      "flexShrink": 1,
                      "justifyContent": "center",
                      "minWidth": 64,
                      "shadowColor": "#000000",
                      "shadowOffset": Object {
                        "height": 0.75,
                        "width": 0,
                      },
                      "shadowOpacity": 0.24,
                      "shadowRadius": 1.5,
                    }
                  }
                >
                  <View
                    accessibilityRole="button"
                    accessibilityState={
                      Object {
                        "disabled": undefined,
                      }
                    }
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "overflow": "hidden",
                        },
                        Object {
                          "borderRadius": 0,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "justifyContent": "center",
                          },
                          Object {
                            "width": "100%",
                          },
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        selectable={false}
                        style={
                          Array [
                            Object {
                              "color": "#000000",
                              "fontFamily": "Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                              "fontWeight": "400",
                              "textAlign": "left",
                            },
                            Array [
                              Object {
                                "letterSpacing": 1,
                                "marginHorizontal": 16,
                                "marginVertical": 9,
                                "textAlign": "center",
                              },
                              undefined,
                              Object {
                                "textTransform": "uppercase",
                              },
                              Object {
                                "color": "#ffffff",
                                "fontFamily": "Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                                "fontWeight": "500",
                              },
                              Object {
                                "fontFamily": "Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                                "fontWeight": "500",
                              },
                              Object {
                                "color": "#ffffff",
                              },
                            ],
                          ]
                        }
                      >
                        Improve my recommendations
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
            <View
              style={
                Object {
                  "maxWidth": "100%",
                  "paddingTop": 20,
                  "width": "100%",
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    Object {
                      "textAlign": "center",
                    },
                  ]
                }
              >
                No users found, try a different query
              </Text>
              <Text
                style={
                  Array [
                    Object {
                      "color": "#000000",
                      "fontFamily": "Roboto, \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
                      "fontWeight": "400",
                      "textAlign": "left",
                    },
                    Object {
                      "fontSize": 18,
                      "paddingBottom": 10,
                      "paddingTop": 20,
                    },
                  ]
                }
              >
                Interesting people:
              </Text>
            </View>
          </View>
        </RCTScrollView>
      </View>
    </View>
  </View>
</View>
`;
