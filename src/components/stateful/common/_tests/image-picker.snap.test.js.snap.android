// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ShowOrPickImage with image Matches snapshot 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
      }
    }
  >
    <View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgb(0,0,0)",
              "borderRadius": 50,
              "height": 100,
              "width": 100,
            },
            undefined,
          ]
        }
      >
        <Image
          source={
            Object {
              "uri": "/abcd",
            }
          }
          style={
            Object {
              "borderRadius": 50,
              "height": 100,
              "width": 100,
            }
          }
        />
      </View>
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "margin": 6,
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 11.25,
                "height": 22.5,
                "width": 22.5,
              },
              undefined,
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#000000",
                "borderWidth": 0.5,
                "bottom": 0,
                "position": "absolute",
                "right": 0,
              },
            ],
          ]
        }
      >
        <View>
          <Text
            accessibilityElementsHidden={true}
            allowFontScaling={false}
            importantForAccessibility="no-hide-descendants"
            pointerEvents="none"
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 15,
                },
                Array [
                  Object {
                    "transform": Array [
                      Object {
                        "scaleX": 1,
                      },
                    ],
                  },
                  Object {
                    "backgroundColor": "transparent",
                  },
                ],
                Object {
                  "fontFamily": "material-community",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            Ôè´
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`ShowOrPickImage without image Matches snapshot 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
        "opacity": 1,
      }
    }
  >
    <View>
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgb(0,0,0)",
              "borderRadius": 50,
              "height": 100,
              "width": 100,
            },
            Object {
              "alignItems": "center",
              "justifyContent": "center",
            },
            Object {},
          ]
        }
      >
        <Text />
      </View>
      <View
        accessibilityRole="button"
        accessibilityState={
          Object {
            "disabled": undefined,
          }
        }
        accessible={true}
        focusable={false}
        hitSlop={
          Object {
            "bottom": 6,
            "left": 6,
            "right": 6,
            "top": 6,
          }
        }
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "overflow": "hidden",
            },
            Array [
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "margin": 6,
                "overflow": "hidden",
              },
              Object {
                "borderRadius": 11.25,
                "height": 22.5,
                "width": 22.5,
              },
              undefined,
              Object {
                "backgroundColor": "#ffffff",
                "borderColor": "#000000",
                "borderWidth": 0.5,
                "bottom": 0,
                "position": "absolute",
                "right": 0,
              },
            ],
          ]
        }
      >
        <View>
          <Text />
        </View>
      </View>
    </View>
  </View>
</View>
`;
