// Write: create, update, delete
// Read: get, list

rules_version = '2'
service cloud.firestore {
  match /databases/{database}/documents {

    // Disallow all by default
    match /{document=**} {
      allow read, write: if false
    }


    // ///////////////////////////////
    // Public facing data
    // ///////////////////////////////
    match /users/{userUid} {
      // Write own, read others if logged in
      allow write: if request.auth.uid == userUid
      allow read: if true // Needed for handle checks
    }
    match /userMeta/{userUid} {
      // Write own, read others if logged in
      allow write: if request.auth.uid == userUid
      allow read: if request.auth.uid != null
    }
    match /relationships/{relationshipId} {
      // Write if you are the follower, read only otherwise
      allow write: if resource == null || resource.data.follower == request.auth.uid
      allow read: if request.auth.uid != null
    }
    match /nutshells/{nutshellId} {
      // Write own, read others if logged in
      allow write: if resource == null || resource.data.owner == request.auth.uid
      allow read: if request.auth.uid != null
    }
    match /fingerprints/{fingerprint} {
      // Only allow a write if the data given is ownership of the logged in account and that is the only data supplied
      allow write: if request.auth.uid != null && request.resource.data.size() == 1 && request.resource.data.owners.hasOnly( [ request.auth.uid ] )
    }

    // ///////////////////////////////
    // Private data
    // ///////////////////////////////
    match /settings/{userUid} {
      // Write own, read others if logged in
      allow write, read: if request.auth.uid == userUid
    }
    match /inbox/{userUid} {
      // Write own, read others if logged in
      allow write, read: if request.auth.uid == userUid
    }

    // ///////////////////////////////
    // Conditional data
    // ///////////////////////////////
    match /userContacts/{userUid} {
      // Write own, read others if logged in
      allow write, read: if request.auth.uid == userUid

      // Allow reading if either 1) the user you want to read follows you or 2) this user put their profile on public mode
      allow read: if ( request.auth.uid in get(/databases/$(database)/documents/userMeta/$(userUid)).data.following ) || ( get(/databases/$(database)/documents/settings/$(userUid)).data.anyoneCanRespond == true )
    }

    // ///////////////////////////////
    // System data
    // ///////////////////////////////
    match /reportedAbuse/{reportUid} {
      // Only create new ones
      allow create: if request.auth.uid != null
      allow read, write: if get(/databases/$(database)/documents/specialPowers/$(request.auth.uid)).data.moderator == true
    }

    match /specialPowers/{userUid} {
      // Only create new ones
      allow read: if request.auth.uid == userUid
    }

    match /nutshells/{nutshellId} {
      // Write own, read others if logged in
      allow update: if get(/databases/$(database)/documents/specialPowers/$(request.auth.uid)).data.moderator == true
      allow delete: if get(/databases/$(database)/documents/specialPowers/$(request.auth.uid)).data.admin == true
    }

  }
}